services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_VHOST: '/'
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
  user-microservice:
    build:
      context: ./
      dockerfile: ./apps/user-microservice/Dockerfile
      target: development
    container_name: user-microservice
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev user-microservice

  api-gateway:
    build:
      context: ./
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    container_name: nestjs-microservice-starter-api-gateway
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - user-microservice
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/data
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - uber-gatway:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${POSTGRES_ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${POSTGRES_ADMIN_PASSWORD}
    ports:
      - '5050:80'
    env_file:
      - .env
    depends_on:
      - postgres

volumes:
  redis:
    driver: local
  uber-gatway:
